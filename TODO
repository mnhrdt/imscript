For Release 1:

- fix a set of "core" tools, move others to misc
- add --help/manpage to each of the core tools
- add a tutorial line for each core tool, tutorial build becomes test suite


Release 2:

- remove help_stuff.c and add it explicitly inside each tool, next to its main
- refactor the compilation to produce a single-executable (a la git/busybox)
- open question: include all .c into a single tu, or link the .o together?


Release 3:

- guix packaging
- sourcehut becomes the actual entry point (maybe quit github altogether?)
- stagit automated deploy on purple or boucantrin


Release 4:

- build single executable as an αpε


Release 5:

- arrange core/misc divide: move and remove stuff
- refactor interface to remove some envvars in favor of options


Release 6:

- ftr: add some neat terminal-based backends (tip, sixel, ...)
- arrange ftr tools
- complete srt terminal


Release 7:

- the great ftr unification: cpu, icrop2, cpuflip... they all become one
- the great quantizer unification: palette, qauto, viewflow.... become one
- cpu refactor into pure MVC, headless interface
- cpu packaging for python + jupyter access


Release 8:

- review article comparing our numerical results with those of other packages
